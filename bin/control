#!/bin/bash
source $OPENSHIFT_LOGSTASH_DIR/lib/util

pid=$OPENSHIFT_LOGSTASH_DIR/run/logstash.pid

function status() {
    client_result $pwd
}

function update() {
    stop
    _install_version ${LOGSTASH_VERSION}
}

function start() {
    if ! [ -f $pid ]; then
        _build_config
        nohup $LOGSTASH_BIN_DIR/bin/logstash agent -f $LOGSTASH_CONFIG_DIR -l $LOGSTASH_LOG_DIR/logstash.log --debug &

        ret=$?
        if [ $ret -ne 0 ]; then
            echo "Logstash failed to start - $ret" 1>&2
            return $ret
        fi
        echo $! > $pid
    fi
}

function stop() {
  echo "Stopping Logstash"
  if [ -f $pid ]; then
    local zpid=$(cat $pid 2> /dev/null)
  fi

  if [ -n $zpid ]; then
    #/bin/kill $zpid
    /bin/kill -0 "$zpid" > /dev/null
    local ret=$?
    if [ $ret -eq 0 ]; then
      local TIMEOUT=10
      while [ $TIMEOUT -gt 0 ] &&  _is_running ; do
        /bin/kill -0 "$zpid" > /dev/null 2>&1  ||  break
        sleep 1
        let TIMEOUT=${TIMEOUT}-1
      done
    fi
    rm $pid
  fi
}

function restart() {
    if (stop); then
        start
    else
        start
    fi
}

function build() {
    echo
}

function post-deploy() {
    echo
}

function pre-build() {
    echo
}

function tidy() {
    echo
}

#
#  main():
#

# Ensure arguments.
if ! [ $# -gt 0 ]; then
    echo "Usage: $0 [start|restart|graceful|graceful-stop|stop|status|update|use-source]"
    exit 1
fi

# Source utility functions.
#source $OPENSHIFT_CARTRIDGE_SDK_BASH

# Handle commands.
case "$1" in
    start)               start       ;;
    restart|graceful)    restart     ;;
    graceful-stop|stop)  stop        ;;
    status)              status      ;;
    build)               build       ;;
    pre-build)           pre-build   ;;
    post-deploy)         post-deploy ;;
    tidy)                tidy        ;;
    update)              update      ;;
    use-source)          use-source  $2 $3 ;;
    *)
esac
